@startuml
' Set Font Size
' !$FONT_SIZE = "60"
' skinparam defaultFontSize $FONT_SIZE
' skinparam classFontSize   $FONT_SIZE
' skinparam arrowFontSize   $FONT_SIZE
' skinparam noteFontSize    $FONT_SIZE
' skinparam packageFontSize 82

' Customization Settings
skinparam dpi 100
skinparam classattributeiconsize 0
skinparam style strictuml
' !pragma ratio 2.0
' skinparam linetype ortho

' Begin UML Here

' Most activity functions are shown in storyboard so we will update this later
package "Activities" {

    class ProfileActivity
    {
        -profileController: ProfileController
    }

    class LeaderboardActivity
    {
        -learderboardController: LeaderboardController
    }

'    class OtherPlayerActivity
'    {
'        -otherPlayerController: OtherPlayerController
'    }

    class SignupActivity
    {
        -signupController: SignupController
    }

    class QrInventoryActivity
    {
        -qrInventoryController: QrInventoryController
    }

    class SearchActivity
    {
        -searchActivity: SearchController
    }

    class MapActivity
    {
        -mapController: MapController
    }

    class MainMenuActivity
    {
        -mainMenuController: MainMenuController
    }
    note top: All Activities extend Android's Activity class (not shown for readability)

    class QrScannedActivity
    {
        -QrScannedActivity: QrScannedController
    }
}

package "Controllers" {

    class MainMenuController
    {
        -playerController: PlayerController
        -cameraController: CameraController
        -qrCodeController: QrCodeController
        ' pops up camera to scan, recive return value or exception
        ' ask qrCodeController verity & identify the qrCode
        +scanQr(): String
    }


    class ProfileController
    {
        -activity: Activity
        -playerController: PlayerController

        +getPlayerName(): String
        +getPlayerContact(): String
        +generatePlayerQr(): Image
    }

    class LeaderboardController
    {
        -controllerInstance: LeaderboardController
        -myScore: Integer
        -sortMethod: String
        -playerController: PlayerController

        ' PlayerController doesn't return all players at once, one player at a time.
        +getLeaderboard(list: HashMap[])
        +sortLeaderboard(list: HashMap[], sortMethod: Integer)
    }

    class SignupController
    {
        -playerController: PlayerController

        +validateUsername(playerName: String): Boolean
        +addNewPlayer(newusername: String, contact: String, password: String)
        +getUsername(): String
        ' checks the app is the first time run or load in current player in playerController
        +checkExisitingSession(): Boolean
    }

'    class OtherPlayerController
'    {
'        -inventoryArray: String[]
'        -playerController: PlayerController
'
'        +setPlayer(username: String)
'        +getPlayerInfo(infoName: String): String
'        +updateComment(comment: String, qrCodeHash: String)
'    }

    class QrCodeController
    {
        -username: String
        -locationController: LocationController
        -databaseProxy: DatabaseController

        ' addQrCode add a newly scanned QR code to Database and it update the geolocation index in Location Database if saved.
        +addQrCode(qrCodeHash: String, score: Integer, addLocation: Boolean)
        +updateComment(qrCodeHash: String, comment: String)
        +deleteQrCode(qrCodeHash: String)
    }

    class QrInventoryController
    {
        -playerController: PlayerController
        -qrCodeController: QrCodeController

        +getInventory(): HashMap
    }

    class SearchController
    {
        -playerController: PlayerController
        -locationController: LocationController

        +getResultByUsername(search: String): String[]
        +sendUserToProfile(selectedUser: String)
        +getResultByLocation(search: String): String[]
    }

    together {
        class MapController
        {
            -mapData: HashMap
            -locationController: LocationController
            
            +getQrCodeInfo()
            +sendDataToMap()
        }

        class LocationController
        {
            +getQrCode(location: String): QrCode[]
            +getLocation()
        }
    }

    class PlayerController
    {
        -player: Player
        -databaseProxy: DatabaseController

        ' Constructor of PlayerController takes a username and pull Player from database
        +getPlayer(username: String): HashMap
        ' We will use a HashMap to send all the player's data as there would be
        ' too many parameters otherwise.
        ' Additionally, it would allow us to send NULL to specify unchanged parameters.
        +savePlayerData(count:Integer, totalScore: Integer, playerData: HashMap)
    }

    together {
        class RestoreSession
        {
            -userHash: String
            -playerController: PlayerController

            +getUserQr(): String
            +loadPlayer(userHash: String)
            +sendUserToMain()
        }


        class CameraController
        {
            ' TODO: Add image class?
            -image: Image
            -qrHash: String

            +openCamera(): Image
            +analyzeImage(): String
        }

        class QrAnalyzer
        {
            -image: Image

            +setImage(image: Image)
            ' Return QR Hash
            ' Raise error if problem
            +analyzeImage(): String
        }
    }

    class DatabaseController
    {
        -controllerInstance: DatabaseController
        -database: Database

        getInstance()
        checkValidCollection(collection: String)
        getData(callback: Function, list: HashMap[], collection: String, objectName: String )
        writeData(collection String , objectName String, data: HashMap)
        deleteData(String collection, String objectName)
    }

    class QrScannedController
    {
        -qrCodeController: QrCodeController
        -qrHash: String
        -playerController: PlayerController

        +calculateScore(qrHash: String): Integer
        +saveQrCode(location: Boolean)
        ' Call PlayerController to update player's inventory, total score and total count.
        ' If player chooses to not save the QR, then only update the stats.
        +updatePlayerStats()
    }
    ' note top: If player chooses to not save the QR, then only update the stats.
}

package "Models" {

    class Player
    {
        -username: String
        -qrInventory: String[]
        -contactInfo: HashMap
        -qrCount: Integer
        -totalScore: Integer

        +setUsername(name: String)
        +getUsername(): String
        +setContactInfo(field: String, info: String)
        +getContactInfo(field: String): String
        +setQrCount(count: Integer)
        +getQrCount(): Integer
        +setTotalScore(score: Integer)
        +getTotalScore(): Integer
        +setQrInventory(qrInventory: String[])
        +getQrInventory(): String[]
    }

    class QrCode
    {
        -geolocation: String
        -qrCodeHash: String
        -comment: String

        +getGeolocation(): String
        +getQrCodeHash(): String
        +getComment(): String

        +setGeolocation(geolocation: String)
        +setQrCodeHash(qrCodeHash: String)
        +setComment(comment: String)
    }

    interface Database <<interface>>
    note bottom: This is our\nFirebase instance.

    class Camera
    note bottom: This is the system camera
}


'''''''''''''''''''''''''''''''''
' Relationships Between Classes '
'''''''''''''''''''''''''''''''''

ProfileActivity o-- ProfileController

LeaderboardActivity "1" o-- "1" LeaderboardController
LeaderboardController "1" o-- "1" PlayerController
' LeaderboardController "1" -> "1" OtherPlayerController: Get players

SignupActivity "1" o-- "1" SignupController
SignupController "1" -> "1" PlayerController: Create & load\nnew player
PlayerController "1" *-- "1" Player
PlayerController "1" --> "*" DatabaseController: Get Players

' OtherPlayerActivity "1" o-> "1" OtherPlayerController
' OtherPlayerController --> PlayerController: Gets player
' OtherPlayerActivity "1" o-> "1" OtherPlayerController: Updates\n comment
' OtherPlayerController --> QrCodeController: Adds comment

SignupController --> RestoreSession: "Ask to handle\nreturning player"
SignupController --> DatabaseController: "\nCheck username\nuniqueness"
CameraController ->  RestoreSession: Return QR hash
RestoreSession  o-u> PlayerController: "Get current player"
RestoreSession  -> CameraController: "Ask to\n open camera"
MainMenuActivity <-- RestoreSession: "Send user to"
CameraController --> QrAnalyzer: Get hash from image
' QrAnalyzer --up> CameraController: Return hash

QrInventoryActivity "1" o-- "1" QrInventoryController
QrInventoryController "1" o-- "1" QrCodeController
QrCodeController "1" o-> "1" QrCode #green: Create &\nUpdate comment
note bottom on link: We create/update\none at a time
QrCodeController "1" --> "1" DatabaseController: Get & Save\nQrCode(s)
QrCodeController "1" o-- "1" LocationController: Get Location

SearchController "1" --> "1" PlayerController: Get usernames
' FIX: We shouldn't need an entire player object. Just a db call for usernames
SearchController "1" --> "1" LocationController: Get QR\nlocations 

LocationController "1" -> "1" DatabaseController: Get location data
LocationController "1" <-- "1" MapController: Asks for location data

DatabaseController "1" o-- "1" Database
MainMenuController "1" o-- "1" CameraController: Get QR\nHash
MainMenuController "1" o-- "1" PlayerController: Get current\nplayer
MainMenuController "1" o-d- "1" QrCodeController: Verify & identify\n QR Hash
MainMenuActivity "1" o-- "1" MainMenuController

QrInventoryController "1" o-- "1" PlayerController
' QrInventoryController "1" o-- "1" QrCodeController 

QrScannedController "1" --> "1" PlayerController: Get Player
QrScannedController "1" --> "1" QrCodeController: Save new QR Code
QrScannedActivity "1" o-- "1" QrScannedController

MainMenuActivity "1" <-- "1" SignupActivity
MainMenuActivity "1" --> "1" QrScannedActivity
MainMenuActivity "1" --> "1" QrInventoryActivity
MainMenuActivity "1" --> "1" MapActivity
MainMenuActivity "1" --> "1" ProfileActivity
' MainMenuActivity "1" --> "1" OtherPlayerActivity
MainMenuActivity "1" --> "1" LeaderboardActivity
MainMenuActivity "1" --> "1" SearchActivity

CameraController "1" --> "1" Camera: opens

MapActivity "1" o-- "1" MapController #blue

SearchActivity "1" --> "1" SearchController
' TODO: Open QrInventory
' SearchActivity "1" -> "1" OtherPlayerActivity: Opens profile

' Layout Connections
PlayerController -[hidden]- CameraController
PlayerController -[hidden]- RestoreSession
DatabaseController -[hidden]l- CameraController
DatabaseController -[hidden]- QrAnalyzer
QrAnalyzer -[hidden]- Player
QrCodeController -[hidden]- PlayerController
SignupActivity -[hidden]- SearchActivity
SignupActivity -[hidden]- ProfileActivity
SignupActivity -[hidden]- QrScannedActivity
SignupActivity -[hidden]- MapActivity
SearchActivity -[hidden]- QrScannedActivity
Player -[hidden]- QrCode
@enduml
